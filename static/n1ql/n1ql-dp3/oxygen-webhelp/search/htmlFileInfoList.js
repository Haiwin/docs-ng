fil = new Array();
fil["0"]= "DP1releasenotes.html@@@DP1 release notes@@@This is the first developer preview edition of Couchbase Query Language released September 2013. New features Initial release of N1QL developer preview. Changed features Not applicable Fixes Not...";
fil["1"]= "DP2releasenotes.html@@@DP2 release notes@@@This is the second developer preview edition of Couchbase Query Language released November 2013. New features Introducing date/time features in this release. Specifically two new functions DATE_PART...";
fil["2"]= "DP3releasenotes.html@@@DP3 release notes@@@This is the third developer preview edition of Couchbase Query Language released March 2014. New features KEYS clause BETWEEN and NOT BETWEEN clause JOIN clause (based on primary keys) NEST clause...";
fil["3"]= "N1QLreleasenotes.html@@@N1QL release notes@@@The following sections provide release notes for individual versions of Couchbase Query Language (N1QL...";
fil["4"]= "aggregate-function.html@@@Aggregate functions@@@Aggregate functions take multiple values from documents, perform calculations and return a single value as the result. The function names are case insensitive...";
fil["5"]= "array-functions.html@@@Array functions@@@Short reference description. The array functions also support array slicing...";
fil["6"]= "comparison-functions.html@@@Comparison functions@@@Short reference description...";
fil["7"]= "concepts.html@@@Concepts@@@N1QL is a query language for Couchbase Server - a document database. N1QL queries documents that store information about a data items and about relationships between documents...";
fil["8"]= "conditional-functions.html@@@Conditional functions@@@Short reference description...";
fil["9"]= "conventions.html@@@Conventions@@@Conventions used to specify general syntax notation...";
fil["10"]= "create-index.html@@@CREATE INDEX statement@@@The statement creates an index on fields and nested paths. The index provides an optimized access path for N1QL queries...";
fil["11"]= "create-primary-index.html@@@CREATE PRIMARY INDEX statement@@@This statement is used to ensure an optimized primary key index. If the primary key index already exists, the statement recognizes it and does not create a duplicate index...";
fil["12"]= "date-functions.html@@@Date functions@@@Scalar functions perform calculations on data. Scalar functions take a single item in a result set and returns a single value. All function names are case insensitive...";
fil["13"]= "distinct.html@@@DISTINCT clause@@@The DISTINCT clause removes duplicate result objects from the query s result set. If the DISTINCT clause is not used, the query returns all objects that meet the query conditions in a result set...";
fil["14"]= "drop-index.html@@@DROP INDEX statement@@@This statement removes a named index in the given bucket...";
fil["15"]= "explain.html@@@EXPLAIN statement@@@The EXPLAIN statement is used before any N1QL statement to obtain information about how the statement operates...";
fil["16"]= "expressions.html@@@Expressions@@@N1QL expressions are like formulas written in a query language. They include operators, symbols and values to evaluate and filter result objects...";
fil["17"]= "from.html@@@FROM clause@@@This is an optional clause for your query. If this clause is omitted, the input for the query is a single empty object. The most common way to use the FROM clause is to provide a data source that is a named data bucket or path. Alternately, provide the data bucket or path as an alias using the AS clause with FROM...";
fil["18"]= "functions.html@@@Scalar functions@@@Scalar functions perform calculations on data. Scalar functions take a single item in a result set and returns a single value. All function names are case insensitive...";
fil["19"]= "goals.html@@@Goals@@@N1QL is a superset of the SQL language and includes many of SQL s features in addition to features associated with document-oriented databases. This guide describes key concepts about the language, provides examples describing how to use the language, discusses advanced operations you can perform with the language, and includes a language reference for language syntax and language elements...";
fil["20"]= "groupby.html@@@GROUP BY clause@@@The GROUP BY clause collects items from multiple result objects and groups the elements by one or more expressions. This is an aggregate query. The optional HAVING clause follows the GROUP BY clause...";
fil["21"]= "intro.html@@@Introduction to N1QL@@@Couchbase Query Language, known as N1QL and pronounced  Nickel , is a query language for finding data in Couchbase Server. N1QL is designed to be human readable and writable. It is a language designed for ad-hoc querying. The query language is a standard semantic used to build querying ability in other databases...";
fil["22"]= "join.html@@@JOIN clause@@@This optional clause follows the `FROM`clause and allows you to create new input objects by combining two or more source objects. The `KEYS` clause is required after each JOIN. It specifies the primary keys for the second bucket in the join...";
fil["23"]= "keys.html@@@KEYS clause@@@The KEYS clause is an optional clause that follows the FROM clause. The KEYS clause is based on primary keys within a bucket. Only values having those primary keys are included as inputs to the query. KEYS is mandatory for the primary bucket...";
fil["24"]= "limit.html@@@LIMIT clause@@@The LIMIT clause imposes a specific number of objects returned in a result set by SELECT. This clause must have a non-negative integer as upper bound. The OFFSET clause optionally follows the LIMIT clause. If an offset is specified, that many number of objects are omitted from the result set before enforcing a specified LIMIT. This clause must be a non-negative integer...";
fil["25"]= "meta-value-functions.html@@@Meta and value functions@@@Short reference description...";
fil["26"]= "nest.html@@@NEST clause@@@Nesting performs a join across two buckets. But instead of producing a cross-product of the left and right hand inputs, a single result is produced for each left hand input, while the corresponding right hand inputs are collected into an array and nested as a single array-valued field in the result object...";
fil["27"]= "number-functions.html@@@Number functions@@@Short reference description...";
fil["28"]= "operators.html@@@Operators@@@N1QL operators follow a logical order of precedence with the parenthesis having the highest order. Parenthesis are used to combine expressions and operators. If parenthesis are used to group operators and expressions, these items are evaluated first and the result is used in other operations...";
fil["29"]= "orderby.html@@@ORDER BY clause@@@The order of items in the result set is determined by expression in this clause. Objects are sorted first by the left-most expression in the list of expressions. Any items with the same sort value will be sorted with the next expression in the list. This process repeats until all items are sorted and all expressions in the list are evaluated...";
fil["30"]= "reserved-words.html@@@Reserved words@@@Reserved words in N1QL cannot be used as identifiers. All keywork are case-insensitive. To ensure that an identifier does not conflict with a reserved word, escape identifiers with a back tick...";
fil["31"]= "scalar-function.html@@@Scalar functions@@@Scalar functions perform calculations on data. Scalar functions take a single item in a result set and returns a single value. All function names are case insensitive...";
fil["32"]= "select.html@@@SELECT statement@@@The SELECT statement is used to extract data from Couchbase Server. The query is against data buckets and results in one or more objects...";
fil["33"]= "selectClause.html@@@SELECT clause@@@The SELECT clause queries data from the Couchbase database...";
fil["34"]= "string-functions.html@@@String functions@@@Short reference description...";
fil["35"]= "type-functions.html@@@Type functions@@@These functions include type functions for checking and converting the type if the expression...";
fil["36"]= "unnest.html@@@UNNEST clause@@@The UNNEST clause optionally follows the FROM clause. This clause iterates over attributes within a specified document array. The array elements by this clause becomes input for further query operations...";
fil["37"]= "where.html@@@WHERE clause@@@Any expression in the clause is evaluated for objects in a result set. If it evaluates as TRUE for an object, the object is included in the remainder of the query...";
