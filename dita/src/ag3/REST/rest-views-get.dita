<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic6415">
	<title>Querying views</title>
	<shortdesc>Views  are queried by accessing a node on port 8092.</shortdesc>
	<body>
		
		<p>Querying can be performed through the
				REST API endpoint. The REST API supports and operates using the core HTTP protocol,
				and this is the same system used by the client libraries to obtain the view
				data.</p>
		
		<p>Use the REST API to query a view by accessing any node within the
				Couchbase Server cluster on port 8092. For
				example:</p><codeblock><codeph>GET http://[localhost]:8092/[bucket_name]/_design/[ddoc_name]/_view/[view_name]
</codeph></codeblock><p>Where:</p><ul>
				<li><p><codeph>bucket_name</codeph> is the name of the bucket.</p></li>
				<li><p><codeph>ddoc_name</codeph> is the name of the design document that contains the view.</p></li>
			</ul><p>For views defined within the development context, the <codeph>designdocname</codeph> is prefixed
			with <codeph>dev_</codeph>. For example, the design document <codeph>beer</codeph> is
			accessible as a development view using <codeph>dev_beer</codeph>.</p><p>Production views are accessible using
				their name only.</p><ul>
				<li><codeph>view_name</codeph> is the name of the corresponding view within the design
				document.</li>
			</ul><p>When accessing a view stored within an SASL password-protected bucket, you must
				include the bucket name and bucket password within the URL of the
				request:</p><codeblock><codeph>GET http://[bucket_name]:[password]@[localhost]:8092/[bucket_name]/_design/[ddoc_name]/_view/[view_name]
</codeph></codeblock><p>Additional
				arguments to the URL request can be used to select information from the view, and
				provide limit, sorting and other options. For example, to output only ten
				items:</p><codeblock><codeph>GET http://[localhost]:8092/[bucket_name]/_design/[ddoc_name]/_view/[view_name]?limit=10
</codeph></codeblock><p>The
				formatting of the URL follows the HTTP specification. The first argument should be
				separated from the base URL using a question mark ( <codeph>?</codeph> ). Additional
				arguments should be separated using an ampersand ( <codeph>&amp;</codeph> ). Special
				characters should be quoted or escaped according to the HTTP standard
				rules.</p><p>The additional supported arguments are detailed in the following table</p><table>
				<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="3.96*"/>
				<thead>
					<row>
						<entry>Get View Name</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><b>Method</b></entry>
						<entry><codeph>GET /[bucket_name]/_design/design-doc/_view/[view_name]</codeph></entry>
					</row>
					<row>
						<entry><b>Request Data</b></entry>
						<entry>None</entry>
					</row>
					<row>
						<entry><b>Response Data</b></entry>
						<entry>JSON of the rows returned by the view</entry>
					</row>
					<row>
						<entry><b>Authentication Required</b></entry>
						<entry>no</entry>
					</row>
					<row>
						<entry><b>Query Arguments</b></entry>
					</row>
					<row>
						<entry><codeph>descending</codeph></entry>
						<entry>Return the documents in descending by key order</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : boolean; optional</entry>
					</row>
					<row>
						<entry><codeph>endkey</codeph></entry>
						<entry>Stop returning records when the specified key is reached. Key must be
							specified as a JSON value.</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : string; optional</entry>
					</row>
					<row>
						<entry><codeph>endkey_docid</codeph></entry>
						<entry>Stop returning records when the specified document ID is
							reached</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : string; optional</entry>
					</row>
					<row>
						<entry><codeph>full_set</codeph></entry>
						<entry>Use the full cluster data set (development views only).</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : boolean; optional</entry>
					</row>
					<row>
						<entry><codeph>group</codeph></entry>
						<entry>Group the results using the reduce function to a group or single
							row</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : boolean; optional</entry>
					</row>
					<row>
						<entry><codeph>group_level</codeph></entry>
						<entry>Specify the group level to be used</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : numeric; optional</entry>
					</row>
					<row>
						<entry><codeph>inclusive_end</codeph></entry>
						<entry>Specifies whether the specified end key should be included in the
							result</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : boolean; optional</entry>
					</row>
					<row>
						<entry><codeph>key</codeph></entry>
						<entry>Return only documents that match the specified key. Key must be
							specified as a JSON value.</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : string; optional</entry>
					</row>
					<row>
						<entry><codeph>keys</codeph></entry>
						<entry>Return only documents that match each of keys specified within the
							given array. Key must be specified as a JSON value. Sorting is not
							applied when using this option.</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : array; optional</entry>
					</row>
					<row>
						<entry><codeph>limit</codeph></entry>
						<entry>Limit the number of the returned documents to the specified
							number</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : numeric; optional</entry>
					</row>
					<row>
						<entry><codeph>on_error</codeph></entry>
						<entry>Sets the response in the event of an error</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : string; optional</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Supported Values</b></entry>
					</row>
					<row>
						<entry/>
						<entry><codeph>continue</codeph> : Continue to generate view information in
							the event of an error, including the error information in the view
							response stream.</entry>
					</row>
					<row>
						<entry/>
						<entry><codeph>stop</codeph> : Stop immediately when an error condition
							occurs. No further view information will be returned.</entry>
					</row>
					<row>
						<entry><codeph>reduce</codeph></entry>
						<entry>Use the reduction function</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : boolean; optional</entry>
					</row>
					<row>
						<entry><codeph>skip</codeph></entry>
						<entry>Skip this number of records before starting to return the
							results</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : numeric; optional</entry>
					</row>
					<row>
						<entry><codeph>stale</codeph></entry>
						<entry>Allow the results from a stale view to be used</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : string; optional</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Supported Values</b> :</entry>
					</row>
					<row>
						<entry/>
						<entry><codeph>false</codeph> : Force a view update before returning
							data</entry>
					</row>
					<row>
						<entry/>
						<entry><codeph>ok</codeph> : Allow stale views</entry>
					</row>
					<row>
						<entry/>
						<entry><codeph>update_after</codeph> : Allow stale view, update view after
							it has been accessed</entry>
					</row>
					<row>
						<entry><codeph>startkey</codeph></entry>
						<entry>Return records with a value equal to or greater than the specified
							key. Key must be specified as a JSON value.</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : string; optional</entry>
					</row>
					<row>
						<entry><codeph>startkey_docid</codeph></entry>
						<entry>Return records starting with the specified document ID</entry>
					</row>
					<row>
						<entry/>
						<entry><b>Parameters</b> : string; optional </entry>
					</row>
				</tbody>
			</tgroup>
			</table><p>The output from a view will be a JSON structure containing information about
				the number of rows in the view, and the individual view information.</p><p>An
				example of the View result is shown
				below:</p><codeblock><codeph>{
  "total_rows": 576,
  "rows" : [
      {"value" : 13000, "id" : "James", "key" : ["James", "Paris"] },
      {"value" : 20000, "id" : "James", "key" : ["James", "Tokyo"] },
      {"value" : 5000,  "id" : "James", "key" : ["James", "Paris"] },
â€¦
    ]
}
</codeph></codeblock><p>The
				JSON returned consists of two fields:</p><ul>
				<li><codeph>total_rows</codeph></li>
			</ul><p>A count of the number of rows of information within the stored View. This shows
				the number of rows in the full View index, not the number of rows in the returned
				data set.</p><ul>
				<li><codeph>rows</codeph></li>
			</ul><p>An array, with each element of the array containing the returned view data,
				consisting of the value, document ID that generated the row, and the key.</p><p>In
				the event of an error, the HTTP response will be an error type (not 200), and a JSON
				structure will be returned containing two fields, the basic <codeph>error</codeph>
				and a more detailed <codeph>reason</codeph> field. For
				example:</p><codeblock><codeph>{
  "error":"bad_request",
  "reason":"invalid UTF-8 JSON: {{error,{1,\"lexical error: invalid char in json text.\\n\"}},\n                     \"Paris\"}"
}
</codeph></codeblock><p>If
				you supply incorrect parameters to the query, an error message is returned by the
				server. Within the Client Libraries the precise behavior may differ between
				individual language implementations, but in all cases, an invalid query should
				trigger an appropriate error or exception.</p>
	</body>
	<related-links>
		<linklist>
			<link href="../Views/views-intro.dita"></link>
		</linklist>
	</related-links>
</topic>
