<?xml version="1.0" encoding="utf-8"?><?workdir /Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/oxygen_dita_temp/Features?><?workdir-uri file:/Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/oxygen_dita_temp/Features/?><?path2project ../?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="concept_mzx_cmx_b4" ditaarch:DITAArchVersion="1.2" domains="(topic concept)                            (topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic concept/concept " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="concept:1;3:34">

 <title class="- topic/title " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="title:1;5:9">Global thread pool</title>
 <shortdesc class="- topic/shortdesc " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="shortdesc:1;6:13">Global thread pool optimizes dispatch tasks by decoupling buckets from thread allocation.</shortdesc>
 
 <conbody class="- topic/body  concept/conbody " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="conbody:1;8:11">
   <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="p:1;9:7">Threads and buckets are decoupled in the thread management which allows threads to run tasks
   for any bucket based on the bucket prioritization. Since the global thread pool allows for bucket
   priority levels, a separate auxillary I/O queue is available with the reader and writer queues at
   every priority level. This provides improved task queueing. For example, when a thread is
   assigned to running a task from the auxIO queue and a second task comes in, another thread is
   assigned to pick up the next task.</p>
  
  <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="p:2;16:6">In terms of thread scheduling, if all buckets have the same priority (default setting), each
   thread evenly round-robins over all the task queues of the buckets and then goes to sleep when
   all buckets are either empty or being serviced by other threads. If buckets have different
   priorities, the threads spend an appropriate fraction of time (scheduling frequency)
   dispatching tasks from queues of these bucket. </p>
  
  
   <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="p:3;23:7">Threads are spawned based on system capabilities at initial startup of a server node instance. 
    These capabilities include, among other
    parameters, the number of CPU cores and the storage type (for example, SSD vs spindle disk).</p>
  
  <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="p:4;27:6">Global thread pool management promotes:</p>
  <ul class="- topic/ul " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="ul:1;28:7">
   <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:1;29:8">Dynamic thread allocation which provides balanced provisioning by using idle threads (CPU)
    and disk capacity</li>
   <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:2;31:8">Higher parallelism for thread workers and I/O resource management</li>
   <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:3;32:8">Scalability by supporting a very large number of buckets</li>
   <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:4;33:8">Multi-tenancy, policy-based scheduling, higher throughput, and lower latency</li>
  </ul>
  
  <fig class="- topic/fig " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="fig:1;36:8"><image href="../images/global-thread-pool.png" width="720" alt="Global Thread Pool diagram" placement="inline" class="- topic/image " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="image:1;36:101"/></fig>

  
  <section class="- topic/section " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="section:1;39:12"><title class="- topic/title " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="title:2;39:19">Impacted documentation</title>
   <ul class="- topic/ul " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="ul:2;40:8">
    <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:5;41:9">Disk storage</li>
    <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:6;42:9">Multiple readers and writers</li>
    <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:7;43:9">Auxiliary I/O dispatcher</li>
    <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:8;44:9">Reader/writer threads</li>
    <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="li:9;45:9"/>
   </ul>
  </section>
  
 </conbody>
 
 <related-links class="- topic/related-links " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="related-links:1;51:17"><linkpool class="- topic/linkpool " xtrc="topicref:5;10:54" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/30Features.ditamap"><link class="- topic/link " mapclass="- map/topicref " type="topic" xtrc="topicref:1;5:42" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/30Features.ditamap" href="../Features/features.dita" role="parent"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Couchbase 3.0 Features</linktext></link></linkpool>
  <linklist class="- topic/linklist " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="linklist:1;52:13">
   <link href="bucket-priority.dita" class="- topic/link " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="link:1;53:39" type="concept"><?ditaot gentext?><linktext class="- topic/linktext ">Bucket disk I/O priority</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Bucket disk I/O priority refers to an advanced setting for optimizing I/O allocation.</desc></link>
   <link href="../Monitoring/monitor-statistics.dita" class="- topic/link " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="link:2;54:55" type="topic"><?ditaot gentext?><linktext class="- topic/linktext ">Couchbase Server statistics</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Couchbase Server provides statistics at multiple levels throughout the cluster.</desc></link>
   <link href="../Concepts/concept-cacheLayer.dita" class="- topic/link " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="link:3;55:53" type="topic"><?ditaot gentext?><linktext class="- topic/linktext ">Caching layer</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Couchbase Server includes a built-in caching layer which      acts as a central part of the server and provides very rapid reads and writes of data.</desc></link>
   <link href="../Concepts/concept-readerWriter.dita" class="- topic/link " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Features/global-thread-pool.dita" xtrc="link:4;56:55" type="topic"><?ditaot gentext?><linktext class="- topic/linktext ">Multiple readers and writers</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Multi-threaded readers and writers provide      multiple processes to simultaneously read and write data on disk.      Simultaneous reads and writes increases disk speed and improves the read rate from disk. </desc></link>
  </linklist>
 </related-links>


</concept>