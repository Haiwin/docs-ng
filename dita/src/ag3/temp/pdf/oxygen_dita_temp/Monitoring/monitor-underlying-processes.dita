<?xml version="1.0" encoding="utf-8"?><?workdir /Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/oxygen_dita_temp/Monitoring?><?workdir-uri file:/Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/oxygen_dita_temp/Monitoring/?><?path2project ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xml:lang="en-us" id="topic1635" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="topic:1;4:40">
  <title class="- topic/title " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="title:1;5:10">Underlying server processes</title>
  <shortdesc class="- topic/shortdesc " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="shortdesc:1;6:14">There are several server processes that constantly run in Couchbase Server.</shortdesc>
  <body class="- topic/body " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="body:1;7:9">
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="p:1;8:8">These processes occur whether
      or not the server is actively handling reads/writes or handling other operations from a client
      application. Right after you start up a node, you may notice a spike in CPU utilization, and
      the utilization rate will plateau at some level greater than zero. The following describes the
      ongoing processes that are running on your node:</p>
    <ul class="- topic/ul " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="ul:1;13:9">
      <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="li:1;14:11"><b class="+ topic/ph hi-d/b " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="b:1;14:14">beam.smp on Linux: erl.exe on Windows</b></li>
    </ul>
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="p:2;16:8">These processes are responsible for monitoring and managing all other underlying server
      processes such as ongoing XDCR replications, cluster operations, and views.</p>
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="p:3;18:8">There is a separate monitoring/babysitting process running on each node. The process is small
      and simple and therefore unlikely to crash due to lack of memory. It is responsible for
      spawning and monitoring the second, larger process for cluster management, XDCR and views. It
      also spawns and monitors the processes for Moxi and memcached. If any of these three processes
      fail, the monitoring process will re-spawn them.</p>
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="p:4;23:8">The main benefit of this approach is that an Erlang VM crash will not cause the Moxi and
      memcached processes to also crash. You will also see two <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="codeph:1;24:72">beam.smp</codeph> or
        <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="codeph:2;25:17">erl.exe</codeph> processes running on Linux or Windows respectively.</p>
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="p:5;26:8">The set of log files for this monitoring process is <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="codeph:3;26:68">ns_server.babysitter.log</codeph>
      which you can collect with <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="codeph:4;27:42">cbcollect_info</codeph>. </p>
    <ul class="- topic/ul " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="ul:2;28:9">
      <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="li:2;29:11"><b class="+ topic/ph hi-d/b " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="b:2;29:14">memcached</b> : This process is responsible for caching items in RAM and persisting
          them to disk.</li>
      <li class="- topic/li " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="li:3;31:11"><b class="+ topic/ph hi-d/b " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="b:3;31:14">moxi</b> : This process enables third-party memcached clients to connect to the
          server.</li>
    </ul>
  </body>
  <related-links class="- topic/related-links " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="related-links:1;35:18"><linkpool class="- topic/linkpool " xtrc="topicref:97;113:66" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Admin.ditamap"><link class="- topic/link " mapclass="- map/topicref " type="topic" xtrc="topicref:96;112:49" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Admin.ditamap" href="../Monitoring/monitor-intro.dita" role="parent"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Monitoring</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">There are a number of different ways to monitor Couchbase servers      including underlying processes, ports, and queueing.</desc></link></linkpool>
    <linklist class="- topic/linklist " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="linklist:1;36:15">
      <link href="../CLI/cbcollect_info_tool.dita" class="- topic/link " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Monitoring/monitor-underlying-processes.dita" xtrc="link:1;37:52" type="topic"><?ditaot gentext?><linktext class="- topic/linktext ">cbcollect_info tool</linktext></link>
    </linklist>
  </related-links>
</topic>