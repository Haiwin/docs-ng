<?xml version="1.0" encoding="utf-8"?><?workdir /Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/oxygen_dita_temp/XDCR?><?workdir-uri file:/Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/oxygen_dita_temp/XDCR/?><?path2project ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xml:lang="en-us" id="topic1805" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="topic:1;4:40">
  <title class="- topic/title " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="title:1;5:10">XDCR replication via memcached protocol</title>
  <shortdesc class="- topic/shortdesc " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="shortdesc:1;6:14">XDCR can replicate data through the memcached protocol at a destination cluster.</shortdesc>
  <body class="- topic/body " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="body:1;7:9">
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="p:1;8:8">This mode utilizes highly efficient memcached protocol on the destination cluster for replicating
      changes. The new mode of XDCR increases XDCR throughput, reducing the CPU usage at destination
      cluster and also improves XDCR scalability. </p>
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="p:2;11:8">In earlier versions of Couchbase Server only the REST protocol could be used for replication.
      On a source cluster a work process batched multiple mutations and sent the batch to a
      destination cluster using a REST interface. The REST interface at the destination node
      unpacked the batch of mutations and sent each mutation via a single memcached command. The
      destination cluster then stored mutations in RAM. This process is known as <i class="+ topic/ph hi-d/i " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="i:1;15:85">CAPI mode
        XDCR</i> as it relies on the REST API known as CAPI.</p>
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="p:3;17:8">This second mode available for XDCR is known as <i class="+ topic/ph hi-d/i " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="i:2;17:59">XMEM mode XDCR</i> which bypasses the REST
      interface and replicates mutations via the memcached protocol at the destination cluster:</p>
    
      <image href="../images/XDCR_xmem.png" width="720" placement="inline" class="- topic/image " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="image:1;20:57"/>
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="p:4;21:8">In this mode, every replication process at a source cluster delivers mutations directly via
      the memcached protocol on the remote cluster. This additional mode does not impact current
      XDCR architecture, rather it is implemented completely within the data communication layer
      used in XDCR. Any external XDCR interface remains the same. The benefit of using this mode is
      performance by increasing XDCR throughput, improving XDCR scalability, and reducing CPU usage
      at destination clusters during replication.</p>
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="p:5;27:8">XDCR can be configured to operate via the new XMEM mode, which is the default or with CAPI
      mode. To change the replication mode, change the setting for
        <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="codeph:1;29:17">xdcr_replication_mode</codeph> via the Web Console or REST API. </p>
  </body>
  <related-links class="- topic/related-links " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="related-links:1;31:18"><linkpool class="- topic/linkpool " xtrc="topicref:120;138:58" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Admin.ditamap"><link class="- topic/link " mapclass="- map/topicref " type="topic" xtrc="topicref:115;133:40" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Admin.ditamap" href="../XDCR/xdcr-intro.dita" role="parent"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Cross Datacenter Replication (XDCR)</linktext></link></linkpool>
    <linklist class="- topic/linklist " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="linklist:1;32:15">
      <link href="../rest/rest-xdcr-intro.dita" class="- topic/link " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/XDCR/xxdcr-memcachedReplication.dita" xtrc="link:1;33:49" type="topic"><?ditaot gentext?><linktext class="- topic/linktext ">XDCR REST API</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Cross Datacenter Replication (XDCR) enables you to automatically replicate data between     clusters and between data buckets.</desc></link>
    </linklist>
  </related-links>
</topic>