<?xml version="1.0" encoding="utf-8"?><?workdir /Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/ag3/Tasks?><?workdir-uri file:/Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/ag3/Tasks/?><?path2project ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="topic_pjr_d24_14" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="topic:1;3:30">
  <title class="- topic/title " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="title:1;4:10">Tuning XDCR performance</title>
  <shortdesc class="- topic/shortdesc " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="shortdesc:1;5:14">XDCR performance can be tuned via the <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:1;5:60">xdcrOptimisticReplicationThreshold</codeph> parameter.</shortdesc>
  <body class="- topic/body " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="body:1;6:9">
      
      <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:1;8:10"> By default, XDCR
        gets metadata twice for documents over 256 bytes before it performs conflict resolution for at a
        destination cluster. If the document fails conflict resolution it will be discarded at the
        destination cluster.</p>
      
      <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:2;13:10">When a document is smaller than the number of bytes provided as this
        parameter, XDCR immediately puts it into the replication queue without getting metadata on the
        source cluster. If the document is deleted on a source cluster, XDCR will no longer fetch
        metadata for the document before it sends this update to a destination cluster. Once a document
        reaches the destination cluster, XDCR will fetch the metadata and perform conflict resolution
        between documents. If the document ‘loses’ conflict resolution, Couchbase Server discards it on
        the destination cluster and keeps the version on the destination. This new feature improves
        replication latency, particularly when you replicate small documents.</p>
      
      <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:3;22:10">There are tradeoffs
        when you change this setting. If you set this low relative to document size, XDCR will
        frequently check metadata. This will increase latency during replication, it also means that it
        will get metadata before it puts a document into the replication queue, and will get it again
        for the destination to perform conflict resolution. The advantage is that you do not waste
        network bandwidth since XDCR will send less documents that will ‘lose.’</p>
      
      <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:4;29:10">If you set this
        very high relative to document size, XDCR will fetch less metadata which will improve latency
        during replication. This also means that you will increase the rate at which XDCR puts items
        immediately into the replication queue which can potentially overwhelm your network, especially
        if you set a high number of parallel replicators. This may increase the number of documents sent
        by XDCR which ultimately ‘lose’ conflicts at the destination which wastes network
        bandwidth.</p>
      
      <note type="note" class="- topic/note " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="note:1;37:25">DCR does not fetch metadata for documents that are
        deleted.</note>
      
      <section class="- topic/section " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="section:1;40:16"><title class="- topic/title " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="title:2;40:23">Changing the document threshold</title>
        
        <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:5;42:12">You can change this setting with
          the REST API as one of the internal settings for XDCR. For more information, see <xref href="../cb-rest-api/#couchbase-admin-restapi-xdcr-change-settings" format="html" class="- topic/xref " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="xref:1;44:95"><?ditaot usertext?>Changing
            Internal XDCR Settings</xref>.</p>
      </section>
      
      
      <section class="- topic/section " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="section:2;49:16"><title class="- topic/title " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="title:3;49:23">Monitoring ’Optimistic Replication"</title>
        <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:6;50:12">The
          easiest way you can monitor the impact of this setting is in Couchbase Web Console. On the Data
          Buckets tab under Incoming XDCR Operations, you can compare <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:2;52:79">metadata reads per
            sec</codeph> to <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:3;53:37">sets per sec</codeph>. </p>
        
        <image href="../images/monitor_optmized_xdcr.png" placement="inline" class="- topic/image " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="image:1;55:59"/>
        
        <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:7;57:12">If you set a low threshold relative to document size,
          <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:4;58:19">metadata reads per sec</codeph> will be roughly twice the value of <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:5;58:94">sets per
            sec</codeph>. If you set a high threshold relative to document size, this will virtually
          eliminate the first fetch of metadata and therefore <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:6;60:71">metadata reads per sec</codeph> will
          roughly equal <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:7;61:33">sets per sec</codeph></p>
        
        <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:8;63:12">The other option is to check the log files for
          XDCR, which you can find in <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:8;64:47">/opt/couchbase/var/lib/couchbase/logs</codeph> on the nodes
          for a source bucket. The log files following the naming convention <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:9;65:86">xdcr.1</codeph>,
          <codeph class="+ topic/ph pr-d/codeph " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeph:10;66:19">xdcr.2</codeph> and so on. In the logs you will see a series of entries as
          follows:</p>
        
        <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="codeblock:1;69:20">
out of all 11 docs, number of small docs (including dels: 2) is 4,
number of big docs is 7, threshold is 256 bytes,
after conflict resolution at target ("http://Administrator:asdasd@127.0.0.1:9501/default%2f3%3ba19c9d4e733a97fa7cb38daa4113d034/"),
out of all big 7 docs the number of docs we need to replicate is: 5;
total # of docs to be replicated is: 9, total latency: 142 ms
</codeblock>
        
        <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Tasks/xdcr-tuning-optimistic-replication.dita" xtrc="p:9;77:12">The
          first line means that 4 documents are under the threshold and XDCR checked metadata twice for
          all 7 documents and replicated 5 larger documents and 4 smaller documents. The amount of time to
          check and replicate all 11 documents was 142 milliseconds.</p>
      </section>
  </body>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:68;79:68" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Admin.ditamap"><link class="- topic/link " mapclass="- map/topicref " type="topic" xtrc="topicref:64;75:49" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Admin.ditamap" href="../Tasks/tasks-manage-xdcr.dita" role="parent"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Managing XDCR</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Cross datacenter replication (XDCR) provides an easy method of replicating data from one   cluster to another for disaster recovery as well as better data locality (getting data closer to   its users).</desc></link></linkpool></related-links>
</topic>