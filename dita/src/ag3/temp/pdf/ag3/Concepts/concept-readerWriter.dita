<?xml version="1.0" encoding="utf-8"?><?workdir /Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/ag3/Concepts?><?workdir-uri file:/Users/Ruth/forks/docs-ng/dita/src/ag3/temp/pdf/ag3/concepts/?><?path2project ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xml:lang="en-us" id="topic5374" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/concepts/concept-readerWriter.dita" xtrc="topic:1;4:40">
  <title class="- topic/title " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/concepts/concept-readerWriter.dita" xtrc="title:1;5:10">Multiple readers and writers</title>
  <shortdesc class="- topic/shortdesc " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/concepts/concept-readerWriter.dita" xtrc="shortdesc:1;6:14">Multi-threaded readers and writers provide 
    multiple processes to simultaneously read and write data on disk. 
    Simultaneous reads and writes increases disk speed and improves the read rate from disk. </shortdesc>
  
  <body class="- topic/body " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/concepts/concept-readerWriter.dita" xtrc="body:1;10:9">
    
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/concepts/concept-readerWriter.dita" xtrc="p:1;12:8">Multiple readers and writers are supported to persist data onto disk. For earlier versions of
      Couchbase Server, each server instance had only single disk reader and writer threads. Disk
      speeds have now increased to the point where single read/write threads do not efficiently keep
      up with the speed of disk hardware. The other problem caused by single read/writes threads is
      that if you have a good portion of data on disk and not RAM, you can experience a high level
      of cache misses when you request this data. </p>


    
    <p class="- topic/p " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/concepts/concept-readerWriter.dita" xtrc="p:2;21:8">This multi-threaded engine includes additional synchronization among threads that are
      accessing the same data cache to avoid conflicts. To maintain performance while avoiding
      conflicts over data, Couchbase uses a form of locking between threads as well as thread allocation
      among vBuckets with static partitioning. When Couchbase Server creates multiple reader and
      writer threads, the server assesses a range of vBuckets for each thread and assigns each
      thread exclusively to certain vBuckets. With this static thread coordination, the server
      schedules threads so that only a single reader and single writer thread can access the same
      vBucket at any given time. The previous image shows six pre-allocated threads and
      two data Buckets. Each thread has the range of vBuckets that is statically partitioned for
      read and write access.</p>
    
    <image href="../images/threads_read_write.png" width="500" placement="inline" class="- topic/image " xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/concepts/concept-readerWriter.dita" xtrc="image:1;32:64"/>
    

  </body>

<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:14;19:57" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Admin.ditamap"><link class="- topic/link " mapclass="- map/topicref " type="topic" xtrc="topicref:13;18:54" xtrf="/Users/Ruth/forks/docs-ng/dita/src/ag3/Admin.ditamap" href="../Concepts/concept-diskStorage.dita" role="parent"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Disk storage</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Couchbase Server mainly stores and retrieves information for clients using     RAM. At the same time, Couchbase Server eventually stores all data to disk to provide a     higher level of reliability.</desc></link></linkpool></related-links>
</topic>